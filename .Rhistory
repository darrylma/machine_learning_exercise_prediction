geom_point(aes(y = modelEstimate$lwr, color = testData$density)) +
geom_point(aes(y = modelEstimate$upr, color = testData$density)) +
ylab("Predicted Quality") +
xlab("Alcohol (% by Volume)") +
labs(color = "Density (g/cm^3)") +
labs(title = "Predicting Quality")
ggplot(data=modelEstimate, aes(x = testData$alcohol)) +
scale_fill_manual(name = "my awesome title") +
geom_point(aes(y = modelEstimate$fit, color = testData$density)) +
geom_point(aes(y = modelEstimate$lwr, color = testData$density)) +
geom_point(aes(y = modelEstimate$upr, color = testData$density)) +
ylab("Quality") +
xlab("Alcohol (% by Volume)") +
labs(color = "Density (g/cm^3)") +
labs(title = "Predicting Quality")
library(ggplot2)
library(gridExtra)
library(dplyr)
library(GGally)
library(scales)
library(memisc)
library(pander)
red <- read.csv('wineQualityReds.csv')
white <- read.csv('wineQualityWhites.csv')
red['color'] <- 'red'
white['color'] <- 'white'
wines <- rbind(red, white)
# Re-numbering wines
wines$X <- c(0:6496)
# Creating new variables to categorize wines into low, medium and high quality
# wines
wines$quality.bucket <- with(wines, cut(wines$quality,
breaks=c(0, 5, 7, 10), ordered=TRUE))
wines$quality.category <- ifelse(wines$quality.bucket == '(0,5]', "low",
ifelse(wines$quality.bucket == '(5,7]',
"medium", "high"))
# Helper function to plot a single histogram
plotHistogram <- function(x, xlabel, bw, qstart, qend) {
ggplot(data = wines, aes(x = x)) +
geom_histogram(binwidth = bw) +
xlab(xlabel) +
xlim(quantile(x, qstart), quantile(x, qend))
}
# Helper function to plot a histogram for white wines and a histogram for red
# wines on the same plot
plotRedWhiteDensity <- function(x, xlabel, bw, qstart, qend) {
ggplot(data = wines, aes(x = x)) +
geom_density(binwidth = bw, aes(fill = color, alpha = 0.5, adjust=0.5,
y = ..density../sum(..density..)*100)) +
xlab(xlabel) +
xlim(quantile(x, qstart), quantile(x, qend)) +
ylab("Percentage (%)") +
scale_alpha_continuous(name = "alpha")
}
plotHistogram(wines$volatile.acidity, "Volatile Acidity", 0.01, 0, 0.99)
plotHistogram(wines$fixed.acidity, "Fixed Acidity", 0.1, 0, 0.99)
# Load the data
red <- read.csv('wineQualityReds.csv')
white <- read.csv('wineQualityWhites.csv')
red['color'] <- 'red'
white['color'] <- 'white'
wines <- rbind(red, white)
# Re-numbering wines
wines$X <- c(0:6496)
# Creating new variables to convert quality into an ordered variable,
# categorize wines into low, medium and high quality wines
wines$quality.ordered <- factor(wines$quality, ordered = T)
wines$quality.bucket <- with(wines, cut(wines$quality,
breaks=c(0, 5, 7, 10), ordered=TRUE))
wines$quality.category <- ifelse(wines$quality.bucket == '(0,5]', "low",
ifelse(wines$quality.bucket == '(5,7]',
"medium", "high"))
plotBar(wines$quality.ordered, "Quality", 1, 0, 1)
# Helper function to plot a single bar plot
plotBar <- function(x, xlabel, bw, qstart, qend) {
ggplot(data = wines, aes(x = x)) +
geom_bar() +
xlab(xlabel) +
xlim(quantile(x, qstart), quantile(x, qend))
}
plotBar(wines$quality.ordered, "Quality", 1, 0, 1)
plotBar(wines$quality.ordered, "Quality")
# Helper function to plot a single bar plot
plotBar <- function(x, xlabel) {
ggplot(data = wines, aes(x = x)) +
geom_bar() +
xlab(xlabel)
}
plotBar(wines$quality.ordered, "Quality")
plotHistogram(wines$citric.acid, "Citric Acid", 0.01, 0, 0.99)
plotHistogram(wines$residual.sugar, "Residual Sugar", 0.1, 0, 0.99)
plotHistogram(wines$chlorides, "Chlorides", 0.002, 0, 0.99)
plotHistogram(wines$free.sulfur.dioxide, "Free Sulfur Dioxide", 1, 0, 0.99)
plotHistogram(wines$fixed.acidity, "Fixed Acidity", 0.1, 0, 1)
plotHistogram(wines$volatile.acidity, "Volatile Acidity", 0.01, 0, 1)
plotHistogram(wines$citric.acid, "Citric Acid", 0.01, 0, 1)
plotHistogram(wines$residual.sugar, "Residual Sugar", 0.1, 0, 1)
plotHistogram(wines$free.sulfur.dioxide, "Free Sulfur Dioxide", 1, 0, 1)
plotHistogram(wines$chlorides, "Chlorides", 0.002, 0, 1)
plotHistogram(wines$residual.sugar, "Residual Sugar", 0.5, 0, 1)
1
plotHistogram(wines$free.sulfur.dioxide, "Free Sulfur Dioxide", 1, 0, 1)
plotHistogram(wines$residual.sugar, "Residual Sugar", 0.1, 0, 1)
plotHistogram(wines$chlorides, "Chlorides", 0.002, 0, 1)
plotHistogram(wines$residual.sugar, "Residual Sugar", 0.1, 0, 0.999)
plotHistogram(wines$chlorides, "Chlorides", 0.002, 0, 0.999)
plotHistogram(wines$chlorides, "Chlorides", 0.002, 0, 0.995)
plotHistogram(wines$free.sulfur.dioxide, "Free Sulfur Dioxide", 1, 0, 0.999)
plotHistogram(wines$total.sulfur.dioxide, "Total Sulfur Dioxide", 1, 0, 0.99)
plotHistogram(wines$total.sulfur.dioxide, "Total Sulfur Dioxide", 1, 0, 1)
plotHistogram(wines$total.sulfur.dioxide, "Total Sulfur Dioxide", 1, 0, 0.999)
plotHistogram(wines$total.sulfur.dioxide, "Total Sulfur Dioxide", 5, 0, 0.999)
plotHistogram(wines$total.sulfur.dioxide, "Total Sulfur Dioxide", 3, 0, 0.999)
plotHistogram(wines$density, "Density", 0.0001, 0, 0.99)
plotHistogram(wines$density, "Density", 0.0001, 0, 1)
plotHistogram(wines$density, "Density", 0.0001, 0, 0.999)
plotHistogram(wines$density, "Density", 0.001, 0, 0.999)
plotHistogram(wines$density, "Density", 0.0005, 0, 0.999)
plotHistogram(wines$pH, "pH", 0.01, 0, 0.99)
plotHistogram(wines$pH, "pH", 0.01, 0, 0.999)
plotHistogram(wines$sulphates, "Sulphates", 0.05, 0, 0.99)
plotHistogram(wines$sulphates, "Sulphates", 0.01, 0, 0.99)
plotHistogram(wines$sulphates, "Sulphates", 0.01, 0, 0.999)
plotHistogram(wines$alcohol, "Alcohol", 0.1, 0, 0.99)
plotHistogram(wines$alcohol, "Alcohol", 0.1, 0, 0.999)
# Helper function to plot a scatter plot given two variables
plotScatter <- function(x, xlabel, y, ylabel, qstart, qend) {
ggplot(data = white, aes(x = x, y = y)) +
geom_point(alpha = 0.1) +
xlab(xlabel) +
xlim(quantile(x, qstart), quantile(x, qend)) +
ylab(ylabel) +
ylim(quantile(y, qstart), quantile(y, qend)) +
geom_smooth(method = 'lm', color = 'red') +
scale_color_brewer(type = 'div')
}
# Helper function to plot boxplots given two variables
plotBoxPlot <- function(x, xlabel, y, ylabel, qstart, qend) {
ggplot(data=wines, aes(y = y, x = x)) +
geom_boxplot() +
xlab(xlabel) +
ylab(ylabel) +
ylim(quantile(y, qstart), quantile(y, qend))
}
p1 <- plotScatter(white$residual.sugar, "Residual Sugar", white$density,
"Density", 0, 0.99)
p2 <- plotScatter(white$alcohol, "Alcohol", white$density, "Density", 0, 0.99)
grid.arrange(p1,p2, ncol = 1)
p1 <- plotScatter(white$fixed.acidity, "Fixed Acidity", white$pH, "pH", 0, 1)
grid.arrange(p1, ncol = 1)
ggplot(data = wines, aes(x = alcohol, y = density)) +
geom_point(aes(color = quality.ordered), alpha = 0.01) +
xlim(quantile(wines$alcohol, 0), quantile(wines$alcohol, 0.99)) +
ylim(quantile(wines$density, 0), quantile(wines$density, 0.99)) +
geom_smooth(method = 'lm', color = 'red') +
scale_color_brewer(type = 'seq') +
facet_wrap(~ color)
ggplot(data = wines, aes(x = alcohol, y = density)) +
geom_point(aes(color = quality.ordered), alpha = 0.1) +
xlim(quantile(wines$alcohol, 0), quantile(wines$alcohol, 0.99)) +
ylim(quantile(wines$density, 0), quantile(wines$density, 0.99)) +
geom_smooth(method = 'lm', color = 'red') +
scale_color_brewer(type = 'seq') +
facet_wrap(~ color)
ggplot(data = wines, aes(x = alcohol, y = density)) +
geom_point(aes(color = quality.ordered)) +
xlim(quantile(wines$alcohol, 0), quantile(wines$alcohol, 0.99)) +
ylim(quantile(wines$density, 0), quantile(wines$density, 0.99)) +
geom_smooth(method = 'lm', color = 'red') +
scale_color_brewer(type = 'seq') +
facet_wrap(~ color)
p1 <- plotBoxPlot(wines$quality.ordered, "Quality", wines$alcohol,
"Alcohol", 0, 0.99)
p2 <- plotBoxPlot(wines$quality.ordered, "Quality", wines$density,
"Density", 0, 0.99)
grid.arrange(p1,p2, ncol = 2)
p1 <- plotBoxPlot(wines$quality.ordered, "Quality", wines$residual.sugar,
"Residual Sugar", 0, 0.99)
grid.arrange(p1, ncol = 2)
ggplot(data = wines, aes(x = alcohol, y = density)) +
geom_point(aes(color = quality.ordered)) +
xlim(quantile(wines$alcohol, 0), quantile(wines$alcohol, 0.99)) +
ylim(quantile(wines$density, 0), quantile(wines$density, 0.99)) +
geom_smooth(method = 'lm', aes(color = quality.ordered)) +
scale_color_brewer(type = 'seq') +
facet_wrap(~ color)
ggplot(data = wines, aes(x = alcohol, y = density)) +
geom_point(aes(color = quality.ordered)) +
xlim(quantile(wines$alcohol, 0), quantile(wines$alcohol, 0.99)) +
ylim(quantile(wines$density, 0), quantile(wines$density, 0.99)) +
geom_smooth(method = 'lm', aes(color = quality.ordered)) +
scale_color_brewer(type = 'seq', name = 'Quality') +
facet_wrap(~ color)
ggplot(data=modelEstimate, aes(x = testData$alcohol)) +
geom_line(aes(y = modelEstimate$fit, color = testData$density)) +
geom_line(aes(y = modelEstimate$lwr, color = testData$density)) +
geom_line(aes(y = modelEstimate$upr, color = testData$density)) +
ylab("Predicted Quality") +
xlab("Alcohol")
ggplot(data = wines, aes(x = alcohol, y = density)) +
geom_point(aes(color = quality.ordered)) +
xlim(quantile(wines$alcohol, 0), quantile(wines$alcohol, 0.99)) +
ylim(quantile(wines$density, 0), quantile(wines$density, 0.99)) +
geom_smooth(method = 'lm', aes(color = quality.ordered)) +
scale_alpha_continuous(name="alpha") +
scale_color_brewer(type = 'seq', name = 'Quality') +
xlab("Alcohol (% of volume)") +
ylab("Density (g/cm^3)") +
labs(title = "Density Vs Alcohol Vs Quality") +
facet_wrap(~ color)
ggplot(data=modelEstimate, aes(x = testData$alcohol)) +
geom_line(aes(y = modelEstimate$fit)) +
geom_line(aes(y = modelEstimate$lwr)) +
geom_line(aes(y = modelEstimate$upr)) +
ylab("Predicted Quality") +
xlab("Alcohol")
ggplot(data=modelEstimate, aes(x = testData$alcohol)) +
geom_line(aes(y = modelEstimate$fit)) +
geom_line(aes(y = modelEstimate$lwr)) +
geom_line(aes(y = modelEstimate$upr)) +
geom_point(color = testData$density)
ggplot(data=modelEstimate, aes(x = testData$alcohol)) +
geom_line(aes(y = modelEstimate$fit)) +
geom_line(aes(y = modelEstimate$lwr)) +
geom_line(aes(y = modelEstimate$upr)) +
geom_point(aes(color = testData$density)) +
ylab("Predicted Quality") +
xlab("Alcohol")
ggplot(data=modelEstimate, aes(x = testData$alcohol)) +
geom_line(aes(y = modelEstimate$fit, color = 'red') name = 'fit') +
ggplot(data=modelEstimate, aes(x = testData$alcohol)) +
geom_line(aes(y = modelEstimate$fit, color = 'red'), name = 'fit') +
geom_line(aes(y = modelEstimate$lwr, color = testData$density)) +
geom_line(aes(y = modelEstimate$upr, color = testData$density)) +
ylab("Predicted Quality") +
xlab("Alcohol")
ggplot(data=modelEstimate, aes(x = testData$alcohol)) +
geom_line(aes(y = modelEstimate$fit), name = 'fit') +
geom_line(aes(y = modelEstimate$lwr, color = testData$density)) +
geom_line(aes(y = modelEstimate$upr, color = testData$density)) +
ylab("Predicted Quality") +
xlab("Alcohol")
ggplot(data=modelEstimate, aes(x = testData$alcohol)) +
geom_line(aes(y = modelEstimate$fit), name = 'fit') +
geom_line(aes(y = modelEstimate$lwr), color = 'red')) +
ggplot(data=modelEstimate, aes(x = testData$alcohol)) +
geom_line(aes(y = modelEstimate$fit), name = 'fit') +
geom_line(aes(y = modelEstimate$lwr), color = 'red') +
geom_line(aes(y = modelEstimate$upr, color = testData$density)) +
ylab("Predicted Quality") +
xlab("Alcohol")
ggplot(data=modelEstimate, aes(x = testData$alcohol)) +
geom_line(aes(y = modelEstimate$fit), name = 'fit') +
geom_line(aes(y = modelEstimate$lwr), color = 'red') +
geom_line(aes(y = modelEstimate$upr), color = 'blue') +
ylab("Predicted Quality") +
xlab("Alcohol")
ggplot(data=modelEstimate, aes(x = testData$alcohol)) +
geom_line(aes(y = modelEstimate$fit), name = 'fit') +
geom_line(aes(y = modelEstimate$lwr), color = 'red', name = 'lower') +
geom_line(aes(y = modelEstimate$upr), color = 'blue') +
ylab("Predicted Quality") +
xlab("Alcohol")
ggplot(data=modelEstimate, aes(x = testData$alcohol)) +
geom_line(aes(y = modelEstimate$fit)) +
geom_line(aes(y = modelEstimate$lwr), color = 'red') +
geom_line(aes(y = modelEstimate$upr), color = 'blue') +
ylab("Predicted Quality") +
xlab("Alcohol") +
legend(1, 95, legend=c("Upper Bound", "Fit", "Lower Bound"),
col=c("red", "black", "blue"), lty=1:2, cex=0.8)
ggplot(data=modelEstimate, aes(x = testData$alcohol)) +
geom_line(aes(y = modelEstimate$fit)) +
geom_line(aes(y = modelEstimate$lwr), color = 'red') +
geom_line(aes(y = modelEstimate$upr), color = 'blue') +
ylab("Predicted Quality") +
xlab("Alcohol") +
legend(legend=c("Upper Bound", "Fit", "Lower Bound"),
col=c("red", "black", "blue"))
ggplot(data=modelEstimate, aes(x = testData$alcohol)) +
geom_line(aes(y = modelEstimate$fit)) +
geom_line(aes(y = modelEstimate$lwr), color = 'red') +
geom_line(aes(y = modelEstimate$upr), color = 'blue') +
ylab("Predicted Quality") +
xlab("Alcohol") +
legend(1, 95, legend=c("Upper Bound", "Fit", "Lower Bound"),
col=c("red", "black", "blue"))
?guidesx
?guides
ggplot(data=modelEstimate, aes(x = testData$alcohol)) +
geom_line(aes(y = modelEstimate$fit)) +
geom_line(aes(y = modelEstimate$lwr), color = 'red') +
geom_line(aes(y = modelEstimate$upr), color = 'blue') +
ylab("Predicted Quality") +
xlab("Alcohol") +
guides(legend=c("Upper Bound", "Fit", "Lower Bound"),
col=c("red", "black", "blue"))
ggplot(data=modelEstimate, aes(x = testData$alcohol)) +
geom_line(aes(y = modelEstimate$fit)) +
geom_line(aes(y = modelEstimate$lwr), color = 'red') +
geom_line(aes(y = modelEstimate$upr), color = 'blue') +
ylab("Predicted Quality") +
xlab("Alcohol") +
guides(title=c("Upper Bound", "Fit", "Lower Bound"),
col=c("red", "black", "blue"))
ggplot(data=modelEstimate, aes(x = testData$alcohol)) +
geom_line(aes(y = modelEstimate$fit)) +
geom_line(aes(y = modelEstimate$lwr), color = 'red') +
geom_line(aes(y = modelEstimate$upr), color = 'blue') +
ylab("Predicted Quality") +
xlab("Alcohol") +
guides(color=c("Upper Bound", "Fit", "Lower Bound"),
col=c("red", "black", "blue"))
ggplot(data=modelEstimate, aes(x = testData$alcohol)) +
geom_line(aes(y = modelEstimate$fit), title = 'Fit') +
geom_line(aes(y = modelEstimate$lwr), color = 'red') +
geom_line(aes(y = modelEstimate$upr), color = 'blue') +
ylab("Predicted Quality") +
xlab("Alcohol") +
guides(color=c("Upper Bound", "Fit", "Lower Bound"),
col=c("red", "black", "blue"))
?geom_line
ggplot(data=modelEstimate, aes(x = testData$alcohol)) +
geom_line(aes(y = modelEstimate$fit), show.legend = TRUE) +
geom_line(aes(y = modelEstimate$lwr), color = 'red') +
geom_line(aes(y = modelEstimate$upr), color = 'blue') +
ylab("Predicted Quality") +
xlab("Alcohol") +
guides(color=c("Upper Bound", "Fit", "Lower Bound"),
col=c("red", "black", "blue"))
ggplot(data=modelEstimate, aes(x = testData$alcohol)) +
geom_line(aes(y = modelEstimate$fit), show.legend = TRUE) +
geom_line(aes(y = modelEstimate$lwr), color = 'red', show.legend = TRUE) +
geom_line(aes(y = modelEstimate$upr), color = 'blue', show.legend = TRUE) +
ylab("Predicted Quality") +
xlab("Alcohol") +
guides(color=c("Upper Bound", "Fit", "Lower Bound"),
col=c("red", "black", "blue"))
ggplot(data=modelEstimate, aes(x = testData$alcohol)) +
geom_line(aes(y = modelEstimate$fit), show.legend = TRUE) +
geom_line(aes(y = modelEstimate$lwr), color = 'red', show.legend = TRUE) +
geom_line(aes(y = modelEstimate$upr), color = 'blue', show.legend = TRUE) +
ylab("Predicted Quality") +
xlab("Alcohol")
legend(1, 95, legend=c("Line 1", "Line 2"),
col=c("red", "blue"), lty=1:2, cex=0.8)
ggplot(data=modelEstimate, aes(x = testData$alcohol)) +
geom_line(aes(y = modelEstimate$fit), show.legend = TRUE) +
geom_line(aes(y = modelEstimate$lwr), color = 'red', show.legend = TRUE) +
geom_line(aes(y = modelEstimate$upr), color = 'blue', show.legend = TRUE) +
ylab("Predicted Quality") +
xlab("Alcohol")
legend(1, 95, legend=c("Line 1", "Line 2"),
col=c("red", "blue"), lty=1:2, cex=0.8)
ggplot(data=modelEstimate, aes(x = testData$alcohol)) +
geom_line(aes(y = modelEstimate$fit), show.legend = TRUE) +
geom_line(aes(y = modelEstimate$lwr), color = 'red', show.legend = TRUE) +
geom_line(aes(y = modelEstimate$upr), color = 'blue', show.legend = TRUE) +
ylab("Predicted Quality") +
xlab("Alcohol")
ggplot(data=modelEstimate, aes(x = testData$alcohol)) +
geom_line(aes(y = modelEstimate$fit, show.legend = TRUE)) +
geom_line(aes(y = modelEstimate$lwr), color = 'red', show.legend = TRUE) +
geom_line(aes(y = modelEstimate$upr), color = 'blue', show.legend = TRUE) +
ylab("Predicted Quality") +
xlab("Alcohol")
ggplot(data=modelEstimate, aes(x = testData$alcohol)) +
geom_line(aes(y = modelEstimate$fit, color = testData$density)) +
geom_line(aes(y = modelEstimate$lwr), color = 'red') +
geom_line(aes(y = modelEstimate$upr), color = 'blue') +
ylab("Predicted Quality") +
xlab("Alcohol")
ggplot(data=modelEstimate, aes(x = testData$alcohol)) +
geom_line(aes(y = modelEstimate$fit, color = testData$density, size = 10)) +
geom_line(aes(y = modelEstimate$lwr), color = 'red') +
geom_line(aes(y = modelEstimate$upr), color = 'blue') +
ylab("Predicted Quality") +
xlab("Alcohol")
ggplot(data=modelEstimate, aes(x = testData$alcohol)) +
geom_line(aes(y = modelEstimate$fit, color = testData$density, size = 6)) +
geom_line(aes(y = modelEstimate$lwr), color = 'red') +
geom_line(aes(y = modelEstimate$upr), color = 'blue') +
ylab("Predicted Quality") +
xlab("Alcohol")
ggplot(data=modelEstimate, aes(x = testData$alcohol)) +
geom_line(aes(y = modelEstimate$fit, color = testData$density, size = 3)) +
geom_line(aes(y = modelEstimate$lwr), color = 'red') +
geom_line(aes(y = modelEstimate$upr), color = 'blue') +
ylab("Predicted Quality") +
xlab("Alcohol")
ggplot(data=modelEstimate, aes(x = testData$alcohol)) +
geom_line(aes(y = modelEstimate$fit, color = testData$density)) +
geom_line(aes(y = modelEstimate$lwr), color = 'red') +
geom_line(aes(y = modelEstimate$upr), color = 'blue') +
ylab("Predicted Quality") +
xlab("Alcohol")
ggplot(data=modelEstimate, aes(x = testData$alcohol)) +
geom_line(aes(y = modelEstimate$fit)) +
geom_line(aes(y = modelEstimate$lwr), color = 'red') +
geom_line(aes(y = modelEstimate$upr), color = 'blue') +
ylab("Predicted Quality") +
xlab("Alcohol")
ggplot(data=modelEstimate, aes(x = testData$alcohol)) +
geom_line(aes(y = modelEstimate$fit)) +
geom_line(aes(y = modelEstimate$lwr, color = 'Lower Bound'), color = 'red') +
geom_line(aes(y = modelEstimate$upr), color = 'blue') +
ylab("Predicted Quality") +
xlab("Alcohol")
ggplot(data=modelEstimate, aes(x = testData$alcohol)) +
geom_line(aes(y = modelEstimate$fit, color = 'Fit')) +
geom_line(aes(y = modelEstimate$lwr, color = 'Lower Bound'), color = 'red') +
geom_line(aes(y = modelEstimate$upr, color = 'Upper Bound'), color = 'blue') +
ylab("Predicted Quality") +
xlab("Alcohol")
ggplot(data=modelEstimate, aes(x = testData$alcohol)) +
geom_line(aes(y = modelEstimate$fit, color = 'Fit')) +
geom_line(aes(y = modelEstimate$lwr, color = 'Lower Bound')) +
geom_line(aes(y = modelEstimate$upr, color = 'Upper Bound')) +
ylab("Predicted Quality") +
xlab("Alcohol")
ggplot(data=modelEstimate, aes(x = testData$alcohol)) +
geom_line(aes(y = modelEstimate$fit, color = 'Fit')) +
geom_line(aes(y = modelEstimate$lwr, color = 'Lower Bound')) +
geom_line(aes(y = modelEstimate$upr, color = 'Upper Bound')) +
ylab("Predicted Quality") +
xlab("Alcohol") +
scale_color_discrete(name = 'Legend')
ggplot(data=modelEstimate, aes(x = testData$alcohol)) +
geom_line(aes(y = modelEstimate$fit, color = 'Fit')) +
geom_line(aes(y = modelEstimate$lwr, color = 'Lower Bound')) +
geom_line(aes(y = modelEstimate$upr, color = 'Upper Bound')) +
ylab("Quality") +
xlab("Alcohol (% of volume)") +
labs(title = "Predicting Quality") +
scale_color_discrete(name = 'Legend')
install.packages("slidify")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
updateR()
install.packages("installr")
library("installr")
updateR()
find.package("devtools")
install.packages("devtools")
library(devtools)
find_rtools()
assignInNamespace("version_info", c(devtools:::version_info, list("3.5" = list(version_min = "3.3.0", version_max = "99.99.99", path = "bin"))), "devtools")
find_rtools()
install.packages("KernSmooth")
library(KernSmooth)
swirl()
library(swirl)
swirl()
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10)
letters
LETTERS
sample(LETTERS)
prob = c(0.3, 0.7)
sample(c(0,1), 100, prob = c(0.3, 0.7))
flips <- sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob=0.7)
flips2 <- rbinom(1, size = 100, prob=0.7)
flips2 <- rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(100, size = 1, prob = 0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, 100, 25)
?rpois
rpos(5, 10)
rpois(5, 10)
my_pois <- replicate(100, rpois(5,10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
install.packages(“RMySQL”, type = “source”)
install.packages("RMySQL", type = "source")
ucscDb <- dbConnect(MySQL(), user="gnome", host="genome-mysql.cse.ucsc.edu")
ucscDb <- dbConnect(MySQL(), user="genome", host="genome-mysql.cse.ucsc.edu")
library(RMySQL)
install.packages(“RMySQL”, type = “source”)
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
install.packages("UsingR")
setwd("C:/Users/Darryl/Desktop/Coursera/Data Science/Practical Machine Learning/Project/Project 1")
install.packages("caret")
install.packages("rattle")
install.packages("e1071")
install.packages("randomForest")
